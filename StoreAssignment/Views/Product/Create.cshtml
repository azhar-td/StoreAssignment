@model StoreAssignment.VModel.VProduct

@{
    ViewData["Title"] = "Create";
}

<h4>Add Product</h4>
<hr />
<p>
    <a asp-action="Index">Product Listing</a>
</p>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data" id="productForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" id="pName"/>
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" id="title" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BrandId" class="control-label"></label>
                <select id="DDLbrand" asp-for="BrandId" class="form-control" asp-items="ViewBag.BrandId"><option value="">Please select</option></select>
                <span asp-validation-for="BrandId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select id="DDLcat" asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId" onchange="getSubCat(this.value)"><option value="">Please select</option></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SubCategoryId" class="control-label"></label>
                <select id="DDLsubCat" asp-for="SubCategoryId" class="form-control" disabled></select>
                <span asp-validation-for="SubCategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AvailabilityDate" class="control-label"></label>
                <input asp-for="AvailabilityDate" class="form-control" />
                <span asp-validation-for="AvailabilityDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsAvailable" /> @Html.DisplayNameFor(model => model.IsAvailable)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" class="form-control" id="imgFile"/>
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input id="submitProduct" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">
    $(document).ready(function () {
        submitProduct();
    });
    function getSubCat(val) {
        //alert(val);
        $.ajax({
            url: '/Product/GetSubCatByCat/',
            data: { catid: val },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value=''>Please select</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].value + ">" + data[x].text + "</option>";
                }
                $('#DDLsubCat').prop('disabled', false);
                $("#DDLsubCat").html(markup).show();
            },
            error: function (reponse) {
                $('#DDLsubCat').prop('disabled', true);
                alert("error : " + reponse);
            }
        });
    }
    function submitProduct() {
        $('#productForm').on('submit', function (event) {
            event.preventDefault();
            if (!$(this).valid()) {
                //alert('Not validate');
                return;
            }
            else {
                $.ajax({
                    url: '/Product/Create/',
                    enctype: 'multipart/form-data',
                    data: new FormData(this),
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        //Show popup
                        alert('Product added in the DB.');
                        window.location.href = '/Product/Index/';
                    }
                });
            }
        });
    }
</script>
}


